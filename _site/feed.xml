<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SWC - Data Science</title>
    <description>N(one)-Stop Data Science</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 11 Jul 2019 19:09:20 +0700</pubDate>
    <lastBuildDate>Thu, 11 Jul 2019 19:09:20 +0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>How I Created my own Personal Portfolio</title>
        <description>&lt;p&gt;This is my portfolio.&lt;/p&gt;

&lt;p&gt;It was quite challenging to get to this stage, so I want to share how I created my own portfolio.&lt;/p&gt;

&lt;p&gt;I was browsing about a week ago on GitHub and discovered GitHub pages for the first time. It provided a way to make websites out of any repository without getting help from website builders like Wordpress and Wix. I always felt these website builders are not really part of me, so I decided to create my own customized blog. So here I am, writing in this brand new blog.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/in-post-images/Screen Shot 2019-07-11 at 16.00.06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To briefly explain, this blog will be a one-stop website where I document any new Data Science skills, personal projects, and simply my thoughts as well. Through this, I want to keep track of what I do, so that I will be able to roughly estimate what I did in certain point in time.&lt;/p&gt;

&lt;p&gt;Whenever we try to gain new skills, there is always a learning curve and a point in time where we say, “Aha, now I can comfortably search on Google to dig ‘deeper’”. To learn how to make a &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; website and customize it, which is an engine that powers GitHub pages, I had to go through a quite steep learning curve. On GitHub Pages official website, it says it will take only minutes to get it up and running. It was true, but I wanted to go further than just using one of the themes already built in.&lt;/p&gt;

&lt;p&gt;And I am sure many of those who want a website are also like me.&lt;/p&gt;

&lt;p&gt;I started by exploring &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll themes&lt;/a&gt;. Among hundreds of themes, I chose &lt;a href=&quot;http://jekyllthemes.org/themes/trophy/&quot;&gt;Trophy theme&lt;/a&gt; which looked simply and elegant. Now, I faced a problem: How on earth should I go about using this theme?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/in-post-images/Screen Shot 2019-07-11 at 16.04.30.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GitHub pages documentation didn’t help much. Instructions on Jekyll official website were too new to me and confusing. What I learned is that I can create one website using my GitHub username and set it as a blog. Building websites for projects is another topic. I created new repository and named it &lt;code class=&quot;highlighter-rouge&quot;&gt;sangwookcheon.github.io&lt;/code&gt;. The name has to be formatted as &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt; so that GitHub will automatically detect it.&lt;/p&gt;

&lt;p&gt;First I decided to look at video tutorials for creating Jekyll websites. I watched &lt;a href=&quot;https://www.youtube.com/watch?v=T1itpPvFWHI&amp;amp;list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB&quot;&gt;four tutorials&lt;/a&gt;, and stopped right there. I went to Trophy theme’s GitHub repository, downloaded all the files from the Master branch, and pasted them all into my Atom editor. I also configured version control.&lt;/p&gt;

&lt;p&gt;From those four tutorials, I installed necessary packages and learned how to create a blank website. I also learned important commands.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; builds the website and stores static content in &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder, and produces a link containing a preview of the website.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt; only builds the website and store information in the folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that I can work on Atom and just push commits to GitHub, I decided to play around with the files. Because the files are supposed to create a site just like this &lt;a href=&quot;https://thomasvaeth.github.io/trophy-jekyll/&quot;&gt;demo website&lt;/a&gt;, I compared it with code side by side to figure out what different components. Here are things I discovered:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder is where I put all the blog posts. The posts are Markdown files, and each contains YAML Front Matter, where I type Title, Date, Category, and more. This is just like making a new post on Wordpress of Medium.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_sass&lt;/code&gt; folder contains all the visual components like font style and  background color. This folder might not be in some of the themes, but the styles are always stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; files.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; is where I can define many things: Email, social links, defualt image, etc. Things I can customize differ theme by theme.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; contains important plugins for the website. One important plugin for GitHub pages is &lt;code class=&quot;highlighter-rouge&quot;&gt;gem 'github-pages', group: :jekyll_plugins&lt;/code&gt;, which allows us to see if the website will properly run in GitHub pages.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; folder and &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; kind of go hand-in-hand, and they contain main contents of the website. The files can be customized to change how things are displayed, such as buttons, images, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In fact, I discovered that GitHub pages restricts what plugins can be rendered. Here’s a &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;website&lt;/a&gt; that shows all whitelisted plugins.&lt;/p&gt;

&lt;p&gt;This theme had a plugin called &lt;code class=&quot;highlighter-rouge&quot;&gt;octopress-autoprefixer&lt;/code&gt; which is not allowed in GitHub pages, so I simply got rid of it. Fortunately, nothing changed visually in the website. It is important to first check whether the website can be deployed on GitHub pages before customizing things.&lt;/p&gt;

&lt;p&gt;So this is the base I created for myself. Now that the website properly runs on GitHub with the link ‘https://sangwookcheon.github.io’, I decided to play around with files. I added ‘About Me’ and ‘Projects’ tab, changed font and color scheme, added Particles.js, and much more. I published all of this on &lt;a href=&quot;https://github.com/SangwookCheon/sangwookcheon.github.io&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/in-post-images/Screen Shot 2019-07-11 at 16.34.00.png&quot; alt=&quot;&quot; /&gt;
Here you can play around with the animation. Refer to its GitHub repository to install it on your own website.&lt;/p&gt;

&lt;p&gt;I have to be clear: I was 2% familiar with CSS and Javascript, and maybe 20% proficient in HTML. But I didn’t hesitate changing the website because I had my ‘secret’ weapon: Google. One of the sites I visited most is undoubtedly Stack Overflow.&lt;/p&gt;

&lt;p&gt;I encountered a lot of unexpected problems due to my lack of experience in web development, and I wrote down major ones on my &lt;a href=&quot;https://github.com/SangwookCheon/sangwookcheon.github.io&quot;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Building Jekyll website was one of the things I had to struggle with to be proficient. I had to have certain level of knowledge to confidently and safely tinker with code located deep down in the file tree. And I think getting this foundation is the hardest, or the most boring process.&lt;/p&gt;

&lt;p&gt;Data Science should be no different, as I must be able to clean and process any kind of data so that I can develop models. Looking ahead, imagining myself standing over the uphill, now I am going to go ahead and set the foundation.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jul 2019 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2019/07/09/how-created-portfolio/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/09/how-created-portfolio/</guid>
        
        
        <category>Personal</category>
        
      </item>
    
  </channel>
</rss>
